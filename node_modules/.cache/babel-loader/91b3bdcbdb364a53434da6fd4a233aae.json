{"ast":null,"code":"\"use strict\";\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Quicknode for ethers.js\nconst defaultApiKey = \"919b412a057b5e9c9b6dce193c5a60242d6efadb\";\nexport class QuickNodeProvider extends UrlJsonRpcProvider {\n  static getApiKey(apiKey) {\n    if (apiKey && typeof apiKey !== \"string\") {\n      logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n    }\n    return apiKey || defaultApiKey;\n  }\n  static getUrl(network, apiKey) {\n    let host = null;\n    switch (network.name) {\n      case \"homestead\":\n        host = \"ethers.quiknode.pro\";\n        break;\n      case \"goerli\":\n        host = \"ethers.ethereum-goerli.quiknode.pro\";\n        break;\n      case \"sepolia\":\n        host = \"ethers.ethereum-sepolia.quiknode.pro\";\n        break;\n      case \"holesky\":\n        host = \"ethers.ethereum-holesky.quiknode.pro\";\n        break;\n      case \"arbitrum\":\n        host = \"ethers.arbitrum-mainnet.quiknode.pro\";\n        break;\n      case \"arbitrum-goerli\":\n        host = \"ethers.arbitrum-goerli.quiknode.pro\";\n        break;\n      case \"arbitrum-sepolia\":\n        host = \"ethers.arbitrum-sepolia.quiknode.pro\";\n        break;\n      case \"base\":\n        host = \"ethers.base-mainnet.quiknode.pro\";\n        break;\n      case \"base-goerli\":\n        host = \"ethers.base-goerli.quiknode.pro\";\n        break;\n      case \"base-spolia\":\n        host = \"ethers.base-sepolia.quiknode.pro\";\n        break;\n      case \"bnb\":\n        host = \"ethers.bsc.quiknode.pro\";\n        break;\n      case \"bnbt\":\n        host = \"ethers.bsc-testnet.quiknode.pro\";\n        break;\n      case \"matic\":\n        host = \"ethers.matic.quiknode.pro\";\n        break;\n      case \"maticmum\":\n        host = \"ethers.matic-testnet.quiknode.pro\";\n        break;\n      case \"optimism\":\n        host = \"ethers.optimism.quiknode.pro\";\n        break;\n      case \"optimism-goerli\":\n        host = \"ethers.optimism-goerli.quiknode.pro\";\n        break;\n      case \"optimism-sepolia\":\n        host = \"ethers.optimism-sepolia.quiknode.pro\";\n        break;\n      case \"xdai\":\n        host = \"ethers.xdai.quiknode.pro\";\n        break;\n      default:\n        logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n    }\n    return \"https:/\" + \"/\" + host + \"/\" + apiKey;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}