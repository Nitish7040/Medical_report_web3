{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\MedicalRecordStorage\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport \"../App.css\";\nimport Home from \"./Home/Home\";\nimport Data from \"./Data/Data\";\nimport Form from \"./Form/Form\";\nimport Navbar from \"./Navbar/Navbar\";\nimport Option from \"./Option/Option\";\nimport Alert from \"./Alert/Alert\";\nimport { useDispatch } from \"react-redux\";\nimport { loadAccount, loadAllData, loadMedical, loadNetwork, loadProvider, subscribeToEvents } from \"../store/interactions\";\nimport config from \"../config.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const loadBlockchainData = async () => {\n    var _config$chainIdStr;\n    const provider = loadProvider(dispatch);\n    const chainId = await loadNetwork(provider, dispatch);\n    const chainIdStr = String(chainId); // ✅ Convert to string\n\n    const medical_config = (_config$chainIdStr = config[chainIdStr]) === null || _config$chainIdStr === void 0 ? void 0 : _config$chainIdStr.medical;\n    if (!medical_config) {\n      console.error(`❌ No config found for chainId: ${chainIdStr}`);\n      return;\n    }\n    window.ethereum.on(\"accountsChanged\", () => {\n      loadAccount(provider, dispatch);\n    });\n    window.ethereum.on(\"chainChanged\", () => {\n      window.location.reload();\n    });\n    const medical = loadMedical(provider, medical_config.address, dispatch);\n    loadAllData(provider, medical, dispatch);\n    subscribeToEvents(medical, dispatch);\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []); // ✅ Only run once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Form\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(Option, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Data\",\n        element: /*#__PURE__*/_jsxDEV(Data, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Route","Routes","Home","Data","Form","Navbar","Option","Alert","useDispatch","loadAccount","loadAllData","loadMedical","loadNetwork","loadProvider","subscribeToEvents","config","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","loadBlockchainData","_config$chainIdStr","provider","chainId","chainIdStr","String","medical_config","medical","console","error","window","ethereum","on","location","reload","address","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/MedicalRecordStorage/src/components/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport \"../App.css\";\r\n\r\nimport Home from \"./Home/Home\";\r\nimport Data from \"./Data/Data\";\r\nimport Form from \"./Form/Form\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\nimport Option from \"./Option/Option\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  loadAccount,\r\n  loadAllData,\r\n  loadMedical,\r\n  loadNetwork,\r\n  loadProvider,\r\n  subscribeToEvents,\r\n} from \"../store/interactions\";\r\nimport config from \"../config.json\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const loadBlockchainData = async () => {\r\n    const provider = loadProvider(dispatch);\r\n    const chainId = await loadNetwork(provider, dispatch);\r\n    const chainIdStr = String(chainId); // ✅ Convert to string\r\n\r\n    const medical_config = config[chainIdStr]?.medical;\r\n\r\n    if (!medical_config) {\r\n      console.error(`❌ No config found for chainId: ${chainIdStr}`);\r\n      return;\r\n    }\r\n\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      loadAccount(provider, dispatch);\r\n    });\r\n\r\n    window.ethereum.on(\"chainChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n\r\n    const medical = loadMedical(provider, medical_config.address, dispatch);\r\n    loadAllData(provider, medical, dispatch);\r\n    subscribeToEvents(medical, dispatch);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadBlockchainData();\r\n  }, []); // ✅ Only run once on mount\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        {/* Home path - No navbar and other elements */}\r\n        <Route path=\"/\" element={<Home />} />\r\n\r\n        {/* Form path - Render Navbar and Option with Form */}\r\n        <Route path=\"/Form\" element={<><Navbar /><Option /><Form /></>} />\r\n\r\n        {/* Data path */}\r\n        <Route path=\"/Data\" element={<Data />} />\r\n      </Routes>\r\n\r\n      <Alert />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}